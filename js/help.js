let helpDialogContents = `
<div class="mku-tab-container" id="help-tab">
	<div class="mku-tab-content" tab-title="編成表マネージャ概要">
		<h2>このアプリについて</h2>
		<p>鉄道車両の編成について、改番履歴や編成組成･解除の履歴を含めた編成表データセットと、それを動的に確認できるUIです。スライダーで年代を任意に設定しながら、その時々の編成を確認することができます。</p>
		<p>実在する車両の編成表を入力して情報の整理に使用したり、架空鉄道やゲーム等の編成表を管理するのに使用したりすることを想定しています。</p>
		<p>本アプリはサーバとの通信は一切行っておらず、本アプリで製作したデータは皆さんのPC内で完結しています。バックアップ等はご自身の責任において行っていただくようお願いいたします。</p>
		<h2>推奨環境</h2>
		<p>PCの最新版GoogleChromeでのご利用を推奨します。スマートフォン等のタッチデバイスでの動作の保証はいたしかねます。</p>
		<h2>謝辞</h2>
		<ul>
		<li>ボタン等の各種アイコンに「<a href="https://kudakurage.com/ligature_symbols/" target="_blank">Ligature Symbols</a>」を利用させていただきました。</li>
		<li>ソートに「<a href="https://github.com/bubkoo/natsort" target="_blank">natsort</a>」を利用させていただきました。</li>
		</ul>
		<p>以上、皆様に御礼申し上げます。</p>
		<h2>お問い合わせ</h2>
		<p>バグ報告･ご意見･ご要望･ご質問は<a href="https://twitter.com/KasumiTrans" target="_blank">Twitter</a>または<a href="mailto:morooka@kasu.me" target="_blank">メール</a>までお願いいたします。</p>
		<p>変更履歴は<a href="https://github.com/kasu-me/formation-manager" target="_blank">GitHub</a>をご覧ください。</p>
		<p>© 2023 M_Kasumi</p>
	</div>
	<div class="mku-tab-content" tab-title="編成･車両">
		<p>本アプリで重要となるのが「編成」および「車両」の概念です。本アプリでこれら2種類がどのように定義され、どのように扱われているかを解説します。</p>
		<h2>編成</h2>
		<p>本アプリでいう「編成」は、【「車両」を順番に並べ、名前(編成番号)を付けたデータの塊】として定義されます。同じ「車両」を同じ順番に並べたものが、本アプリでいうところの「同じ編成」ということになります。「編成」には固有の「編成ID」が付与されます。</p>
		<p>なお、「編成番号」は「編成」の一属性にすぎません。アプリ上では異なる「編成」として扱われるものが同じ「編成番号」を持つこともあり得ます。「編成番号」「車両の並び順」「組成年月」など、これら全てを含めた"データの塊"こそが本アプリでの「編成」の本質です。</p>
		<p>したがって、以下のような場合には「同じ編成」とは呼べなくなり、「編成」は解除されます。</p>
		<ul>
			<li>「編成番号」が変更された場合</li>
			<li>「編成」を構成する「車両」が変更された場合(廃車･脱車など)</li>
			<li>「編成」を構成する「車両」の並び順が変更された場合(組み替えなど)</li>
		</ul>
		<p>一方で、「編成」を構成する「車両」の番号が変更されただけでの場合は、「編成」は解除されません。これは、後述する「車両」の定義によるもので、番号が異なっていても「車両」が同じであれば「同じ車両」と見做すためです。</p>
		<p>現実に存在する鉄道車両であるE233系0番台のグリーン車組み込み準備工事を例に挙げましょう。同系列のうち、T編成は工事前後でサハE233-500形の組込位置が変わっているため、編成番号は同じでも「編成」は別物として扱われます。一方で、H編成ではモハE233-200形の番号がモハE233-800形に変更となっていますが、これらは「同じ車両」である上に、組込位置も変わっていないため、工事前後でも同じ「編成」として扱われます。</p>
		<p>後述の「車両」と異なり、「編成」の状態は「組成」と「解除」の2種類だけで、他の操作を加えることはできません。「編成番号」の変更も、実際には「編成」を解除したうえで新たに別番号の「編成」を組成しています。これは「編成」の状態に連続性を見出すことが非常に難しいためです。例えば、「1-2-3-4」という編成が「1-2」と「3-4」に分割された場合、どちらの編成が最初の編成の後継編成と言えるでしょう？どちらとも言い難い(あるいはどちらとも言える)ことがお分かりだと思います。このような事情から、本アプリでは「編成」に連続性は持たせず、一世一代のものとして扱うことになっています。</p>
		<h2>車両</h2>
		<p>本アプリでいう「車両」とは、【製造されてから廃車になるまでのデータの塊】です。現実世界で言うところの車籍と似たような概念だと考えてOKです。「車両」には固有の「車両ID」が付与されます。</p>
		<p>「車両番号」は「車両」の一属性にすぎず、「車両番号」が変わっても「車両ID」が同じであれば「同じ車両」です。「車両」には、その「車両」の今までの番号がすべて記録されており、番号が違っていても「同じ車両」であればその履歴を辿ることができます。</p>
		<p>また、「編成」は「形式」に所属していますが、「車両」は「形式」に所属していません。そのため、「形式」を跨いだ組み替えを行うことができるようになっています。</p>
	</div>
	<div class="mku-tab-content" tab-title="編成テンプレート">
		<h2>概要</h2>
		<p>一般的に、編成に組成される車両の番号はなんらかの規則性に基づいていることがほとんどです。そんな場合、車両番号を1両ずつ入力しているのでは面倒です。そこで本アプリは、その規則性を「一般式」として予めテンプレートに登録しておいて、そのテンプレートに基づいて編成を作成することができる機能を有しています。</p>
		<p>編成テンプレートは、「編成テンプレート」→「テンプレート作成」ボタンから作成することができます。</p>
		<h2>一般式の入力</h2>
		<p>車両番号の一般式は、「何本目の編成か」をnで表した場合、nの関数として考えると分かりやすいです。以下、様々なパターンを想定して記法を解説します。なお、編成番号の一般式も、車両番号の一般式と同じ要領で入力しますが、「1両目の番号+F」という形式である場合は省略可能です。</p>
		<h3>一般式(基本)</h3>
		<p>ある鉄道会社に、1編成目が「1001-1501」、2編成目が「1002-1502」であるグループがあったとします。千位で大まかなグループを表し、百位で細かいグループを表し、十位と一位で何本目の編成かを表している、よくあるスタイルです。</p>
		<p>これらの編成の車両番号の一般式は、第n編成の場合、「1000+n」および「1500+n」と表現することができます。</p>
		<p>このように、一般式に単にnを足すだけでよい場合、「テンプレート作成」ダイアログの「車両番号の一般式」欄には、「1000」とだけ入力し、「追加」ボタンを押してください。次の車両も同様に、「1500」と入力し、「追加」してください。</p>
		<p>ここまで正常に完了すると、下段に「編成テンプレートから作成できる編成のトップナンバーのプレビュー」が表示され、「1001-1501」の編成が表示されているはずです。</p>
		<h3>一般式(応用①)</h3>
		<p>では、別の鉄道会社に、1編成目が「2001-2002」、2編成目が「2003-2004」であるグループがあったとします。偶数と奇数を対にする、これまたよくあるスタイルです。</p>
		<p>これらの編成の車両番号の一般式は、第n編成の場合、「2000+n*2-1」および「2000+n*2」と表現することができます。</p>
		<p>このような場合、先程よりも複雑な記法が必要となります。まず、「テンプレート作成」ダイアログの「車両番号の一般式」欄には、「n=>2000+n*2-1」と入力する必要があります。これはJavaScriptの「アロー関数」と呼ばれる記法です。まず「n=>」の部分で「以下をnの関数としますよ」と宣言しています。次に、「2000+n*2-1」のように一般式を入力します。このように入力したら、「追加」ボタンを押してください。次の車両も同様に、「n=>2000+n*2」と入力し、「追加」してください。</p>
		<p>ここまで正常に完了すると、下段に「編成テンプレートから作成できる編成のトップナンバーのプレビュー」が表示され、「2001-2002」の編成が表示されているはずです。</p>
		<h3>一般式(応用②)</h3>
		<p>では、別の鉄道会社に、1編成目が「クモハ3001-クハ3501」、2編成目が「クモハ3002-クハ3502」であるグループがあったとします。車両の属性を表す記号など、数字以外の要素が付いたスタイルです。</p>
		<p>これらの編成の車両番号の数字部分の一般式は、第n編成の場合、「3000+n」および「3500+n」と表現することができます。</p>
		<p>しかし、今回は数字以外の文字が含まれているため、数字だけを記入する記法は使えません。このような場合も、応用①と同様にアロー関数を使った記法を使う必要があります。</p>
		<p>まず、「テンプレート作成」ダイアログの「車両番号の一般式」欄には、「n=>"クモハ"+(3000+n)」と入力する必要があります。「クモハ」と「3000+n」を「+」で結んだ形になりますが、クオーテーションを使うことで、数値と数値以外の文字を明確に区別します。このように入力したら、「追加」ボタンを押してください。</p>
		<p>次の車両も同様に、「n=>"クハ"+(3500+n)」と入力し、「追加」してください。</p>
		<p>ここまで正常に完了すると、下段に「編成テンプレートから作成できる編成のトップナンバーのプレビュー」が表示され、「クハ3001-クハ3501」の編成が表示されているはずです。</p>
		<h2>編成テンプレートを作成</h2>
		<p>入力が終わったら、「編成テンプレート作成」ボタンを押して完成です。</p>
		<h2>編成テンプレートから編成を作成</h2>
		<p>編成テンプレートから編成を作成するには、「編成テンプレート」ダイアログで使用するテンプレートを選び、「テンプレートを使用」ボタンを押します。</p>
		<p>「編成テンプレートから編成作成」ダイアログの「番号」入力欄に、「何本目の編成か」を入力します。前述の一般式の説明でいうところの「n」に相当する数字です。</p>
		<p>入力した状態で「編成作成」ボタンを押すと、編成を作成することができます。</p>
	</div>
	<div class="mku-tab-content" tab-title="編成表マスタ">
		<h2>マスタとは</h2>
		<p>本アプリのメイン画面で見えている編成表は、編成表のデータそのものではありません。その大本となる「データそのもの」が別の場所で管理されており、そこには、これまでに製造された車両の製造や廃車の年月、改番や編成の組成の履歴など、全ての情報が記録されています。本アプリでは、この<b>「データそのもの」のことを「編成表マスタデータ」と呼んでいます</b>。本アプリのメイン画面で表示される編成表は、この「データそのもの」と指定された「現在年月」をもとに、表示すべき情報の取捨選択を行って生成されたものです。</p>
		<p>本アプリで編成や車両を操作する場合、「編成解除」や「廃車」といった操作がありますが、これらの機能はあくまでも現在年月で「編成解除」や「廃車」のタイムスタンプを押すだけのもので、編成や車両の存在が消えるわけではありません。一方、マスタデータを直接編集する場合、「編成解除」や「廃車」といった通常発生しうる動作ではなく、最初からなかったことにする、いわば「歴史修正」を行うことができます。</p>
		<p>この機能で削除した編成や車両は復元できなくなりますので、操作は慎重に行ってください。</p>
		<h2>保存</h2>
		<p>本アプリで作成した編成表マスタデータを保存したい場合、「保存」ボタンを押すことでJSON形式での保存が可能です。本アプリで編集中のデータはブラウザの更新ボタンを押下すると消えてしまうため、定期的にJSONとして保存しておくことをおすすめします。</p>
		<h2>読込</h2>
		<p>「読込」ボタンから、PC上に存在するJSONファイルから編成表マスタデータの読み込みを行うことができます。編集中のデータが存在する状態でこの操作を実行すると、編集中のデータはすべて消えてしまいますので、他のファイルを読み込む際は、必ず作業中のデータの保存を行ってから行うようにしてください。</p>
		<h2>マスタ管理</h2>
		<p>作った編成や車両の存在を最初からなかったことにしたい場合は、「マスタ管理」機能を使用します。マスタ管理ダイアログでは、解除された編成や廃車された車両も含め、現在開いている編成表データに存在する全てのデータを一覧で確認し、編集･削除することができます。</p>
	</div>
</div>`;